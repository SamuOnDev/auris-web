---
import '../styles/global.css';
import LanguageSwitcher from '../components/LanguageSwitcher.astro';
import { DEFAULT_LANG, type Lang } from '../i18n';

interface Props {
  title?: string;
  description?: string;
  lang?: Lang;
}

const {
  title = 'Auris International',
  description = 'Psicología y bienestar — auris.es',
  lang: langProp,
} = Astro.props as Props;

const lang = langProp ?? (Astro.params.lang as Lang | undefined) ?? DEFAULT_LANG;
const navItems =
  lang === 'es'
    ? [
        { href: `/${lang}/`, label: 'Inicio' },
        { href: `/${lang}/about`, label: 'Sobre nosotros' },
        { href: `/${lang}/#locations`, label: 'Dónde encontrarnos' },
      ]
    : [
        { href: `/${lang}/`, label: 'Home' },
        { href: `/${lang}/about`, label: 'About' },
        { href: `/${lang}/#locations`, label: 'Where to find us' },
      ];
const contactLabel = lang === 'es' ? 'Contacto' : 'Contact';
---
<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={description} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet">
    <title>{title}</title>
  </head>
<body class="min-h-screen bg-landing text-white font-sans antialiased">
    <header class="border-b border-white/10 bg-[#0B1533]/70 backdrop-blur">
      <div
        class="relative mx-auto grid h-16 max-w-container grid-cols-[auto,1fr,auto] items-center px-4 md:h-20 md:flex md:items-center md:justify-between md:px-8 md:pl-[15%]"
      >
        <button
          type="button"
          data-mobile-menu-button
          aria-controls="primary-navigation"
          aria-expanded="false"
          class="flex h-10 w-10 items-center justify-center rounded-full border border-white/10 bg-white/5 transition hover:border-white/20 hover:bg-white/10 md:hidden"
        >
          <span class="sr-only">{lang === 'es' ? 'Abrir menú' : 'Open menu'}</span>
          <span aria-hidden="true" class="flex flex-col items-center gap-1.5">
            <span class="block h-0.5 w-5 rounded-full bg-white"></span>
            <span class="block h-0.5 w-5 rounded-full bg-white"></span>
            <span class="block h-0.5 w-5 rounded-full bg-white"></span>
          </span>
        </button>

        <a
          href={`/${lang}/`}
          class="flex items-center gap-2 text-sm font-semibold tracking-tight justify-self-center transition hover:text-brand-accent md:mr-auto md:justify-self-start"
        >
          <span class="grid h-9 w-9 place-items-center rounded-full bg-white/10 text-brand-accent ring-1 ring-inset ring-white/10">
            AI
          </span>
          <span class="text-left">
            <span class="block text-xs uppercase tracking-[0.28em] text-white/60">Auris</span>
            <span class="block text-base font-semibold">International</span>
          </span>
        </a>

        <div class="flex items-center justify-end gap-3 justify-self-end md:gap-6">
          <nav
            id="primary-navigation"
            class="absolute left-0 top-full z-40 mt-2 hidden w-full flex-col gap-3 rounded-2xl border border-white/10 bg-[#0B1533]/95 p-4 text-base font-medium text-white shadow-xl md:static md:mt-0 md:flex md:w-auto md:flex-row md:items-center md:gap-6 md:border-0 md:bg-transparent md:p-0 md:text-sm md:text-white/70 md:shadow-none"
          >
            {navItems.map((item) => (
              <a class="rounded-lg px-3 py-2 transition hover:bg-white/10 hover:text-white md:rounded-none md:px-0 md:py-0 md:hover:bg-transparent" href={item.href}>
                {item.label}
              </a>
            ))}
            <a
              href={`/${lang}/contact`}
              class="rounded-full border border-brand-accent/80 px-4 py-2 text-xs font-semibold uppercase tracking-[0.2em] text-brand-accent transition hover:bg-brand-accent hover:text-brand-bg md:hidden"
            >
              {contactLabel}
            </a>
          </nav>
          <a
            href={`/${lang}/contact`}
            class="hidden rounded-full border border-brand-accent/80 px-4 py-2 text-xs font-semibold uppercase tracking-[0.2em] text-brand-accent transition hover:bg-brand-accent hover:text-brand-bg md:inline-flex"
          >
            {contactLabel}
          </a>
          <LanguageSwitcher currentLang={lang} />
        </div>
      </div>
    </header>

    <main class="relative">
      <slot />
    </main>

    <footer class="mt-16 border-t border-white/10">
      <div class="mx-auto max-w-container px-4 py-8 text-xs text-white/60">
        © {new Date().getFullYear()} Auris International — auris.es
      </div>
    </footer>
    <script type="module" is:inline>
      const menuButton = document.querySelector('[data-mobile-menu-button]');
      const nav = document.getElementById('primary-navigation');

      const openMenu = () => {
        nav?.classList.remove('hidden');
        nav?.classList.add('flex');
        menuButton?.setAttribute('aria-expanded', 'true');
        document.body.classList.add('overflow-hidden');
      };

      const closeMenu = () => {
        nav?.classList.add('hidden');
        nav?.classList.remove('flex');
        menuButton?.setAttribute('aria-expanded', 'false');
        document.body.classList.remove('overflow-hidden');
      };

      menuButton?.addEventListener('click', () => {
        if (!nav) return;
        const isOpen = !nav.classList.contains('hidden');
        if (isOpen) {
          closeMenu();
        } else {
          openMenu();
        }
      });

      nav?.querySelectorAll('a').forEach((link) => {
        link.addEventListener('click', () => {
          if (window.innerWidth < 768) {
            closeMenu();
          }
        });
      });

      window.addEventListener('resize', () => {
        if (!nav) return;
        if (window.innerWidth >= 768) {
          nav.classList.remove('hidden');
          nav.classList.remove('flex');
          menuButton?.setAttribute('aria-expanded', 'false');
          document.body.classList.remove('overflow-hidden');
        } else if (!menuButton || menuButton.getAttribute('aria-expanded') !== 'true') {
          nav.classList.add('hidden');
          nav.classList.remove('flex');
        }
      });

      if (window.innerWidth >= 768) {
        nav?.classList.remove('hidden');
        nav?.classList.remove('flex');
        menuButton?.setAttribute('aria-expanded', 'false');
        document.body.classList.remove('overflow-hidden');
      }
    </script>
  </body>
</html>