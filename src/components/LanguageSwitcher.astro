---
import { LANGUAGE_OPTIONS, DEFAULT_LANG, type Lang } from '../i18n';

interface Props {
  currentLang?: Lang;
}

const { currentLang } = Astro.props as Props;
const current = currentLang ?? (Astro.params.lang as Lang | undefined) ?? DEFAULT_LANG;
const options = LANGUAGE_OPTIONS;
const selectId = `lang-switcher-${Math.random().toString(36).slice(2)}`;
---
<label class="sr-only" for={selectId}>Idioma</label>
<select
  id={selectId}
  data-lang-switcher
  class="rounded-md bg-white/5 border border-white/10 px-2 py-2 text-sm"
  value={current}
>
  {options.map(({ code, label }) => (
    <option value={code}>{label}</option>
  ))}
</select>
<script is:inline>
  const select = document.getElementById('${selectId}');
  const ONE_YEAR_SECONDS = 60 * 60 * 24 * 365;
  if (select instanceof HTMLSelectElement) {
    select.addEventListener('change', () => {
      const selected = select.value;
      document.cookie = `lang=${selected}; Max-Age=${ONE_YEAR_SECONDS}; Path=/; SameSite=Lax`;

      const { location } = window;
      const segments = location.pathname.split('/').filter(Boolean);

      if (segments.length === 0) {
        location.href = `/${selected}/`;
        return;
      }

      segments[0] = selected;
      location.href = '/' + segments.join('/') + location.search + location.hash;
    });
  }
</script>