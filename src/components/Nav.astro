---
import LanguageSwitcher from './LanguageSwitcher.astro';
import { t, DEFAULT_LANG, type Lang } from '../i18n';

interface Props {
    lang?: Lang;
}

type TranslationKey = Parameters<typeof t>[1];

const { lang: explicitLang } = Astro.props as Props;
const lang = explicitLang ?? ((Astro.params.lang as Lang | undefined) ?? DEFAULT_LANG);

const LINKS: Array<{ key: TranslationKey; href: string; variant?: 'cta' }> = [
    { key: 'nav_home',      href: `/${lang}/` },
    { key: 'nav_about',     href: `/${lang}/about` },
    { key: 'nav_where',     href: `/${lang}/where` },
    { key: 'nav_contact',   href: `/${lang}/contact`, variant: 'cta' }
];
const CTA_LINK = LINKS.find((l) => l.variant === 'cta');
const MENU_LINKS = LINKS.filter((l) => l.variant !== 'cta');
---

<header class="sticky top-0 z-50 border-b border-white/10 bg-transparent backdrop-blur supports-[backdrop-filter]:bg-white/5">
    <div class="mx-auto max-w-container min-h-[92px] sm:min-h-[108px] lg:min-h-[128px] px-4 py-2 flex items-center">
        <!-- IZQUIERDA: logo + marca -->
        <a href={`/${lang}/`} class="flex items-center gap-4 shrink-0 mr-3 brand">
            <!-- Logo: tamaño contenido y escalable -->
            <img
                src="/logo.png"
                alt="Auris"
                width="96" height="96"
                class="object-contain aspect-square brand__logo
                        h-11  w-11        /* móvil ~44px */
                        sm:h-16 sm:w-16   /* ≥640px ~64px */
                        md:h-24 md:w-24   /* ≥768px ~96px */
                        lg:h-[118px] lg:w-[118px]   /* ≥1024px ~118px */
                        max-h-[128px] max-w-[128px]" />
            <span class="brand__stack">
                <span class="brand__name">
                    Auris Internacional
                </span>
                <span class="brand__tagline">
                    {t(lang, 'badge')}
                </span>
            </span>
        </a>

        <!-- CENTRO (ESCRITORIO): menú SIEMPRE visible y centrado -->
        <nav class="desktop-nav flex-1 justify-center">
            <ul class="menu m-0 p-0">
                {LINKS.map((l) => (
                <li class="m-0 p-0">
                    <a
                        href={l.href}
                        class:list={{
                            link: true,
                            'link-cta': l.variant === 'cta'
                        }}>
                    {t(lang, l.key)}
                    </a>
                </li>
                ))}
            </ul>
        </nav>

        <style is:global>
            /* Oculto en móvil */
            .desktop-nav {
                display: none;
                min-width: 0;
            }
            /* Visible y centrado en ≥ md (768px) — fuerza contra cualquier hidden previo */
            @media (min-width: 768px) {
                .desktop-nav { display: flex !important; justify-content: center; }
            }

            /* Estilos limpios del listado */
            .desktop-nav .menu {
                display: flex;
                list-style: none;
                align-items: center;
                justify-content: center;
                flex-wrap: nowrap;
                gap: 0.75rem;
            }
            .desktop-nav .menu .link {
                display: inline-block;
                padding: .5rem .75rem;
                color: rgba(255,255,255,.9);
                white-space: nowrap;
                text-decoration: none;
                transition: color .15s ease;
            }
            .desktop-nav .menu .link:hover { color: #fff; }
            .desktop-nav .menu .link-cta {
                border: 1px solid rgba(255, 255, 255, .2);
                border-radius: .375rem;
                color: #fff;
                padding-inline: 1rem;
                background: linear-gradient(135deg, rgba(255,255,255,.12), rgba(255,255,255,.04));
                box-shadow: 0 0 0 1px rgba(255,255,255,.08) inset;
                font-size: .875rem;
                margin-left: 0.5rem;
            }
            .desktop-nav .menu .link-cta:hover {
                background: rgba(255,255,255,.12);
            }

            .mobile-cta {
                background: linear-gradient(135deg, rgba(255,255,255,.12), rgba(255,255,255,.04));
                box-shadow: 0 0 0 1px rgba(255,255,255,.08) inset;
            }

            .mobile-actions {
                gap: var(--mobile-actions-vertical-gap, 0.5rem);
            }

            .mobile-actions-row {
                gap: var(--mobile-actions-horizontal-gap, 0.75rem);
            }
        </style>

        <style>
            @import url('https://fonts.googleapis.com/css2?family=Belleza&family=TikTok+Sans:opsz,wght@12..36,300..900&display=swap');

            .brand {
                text-decoration: none;
            }

            .brand__stack {
                display: flex;
                flex-direction: column;
                text-align: left;
                line-height: 1;
            }

            .brand__name {
                color: #fff;
                font-size: clamp(1.75rem, 3.5vw, 2.75rem);
                font-weight: 300;
                letter-spacing: -0.015em;
                line-height: 0.95;
                font-family: 'Belleza', 'TikTok Sans', 'Helvetica Neue', Arial, sans-serif;
            }

            @supports (font-variation-settings: normal) {
                .brand__name {
                    font-variation-settings: 'wght' 340;
                }
            }

            @media (min-width: 640px) {
                .brand__name {
                    font-size: clamp(2.25rem, 2.5vw + 0.5rem, 3rem);
                }
            }

            .brand__tagline {
                margin-top: 0.25rem;
                color: rgba(234, 242, 255, 0.7);
                font-size: clamp(0.875rem, 2vw, 1.1rem);
                font-weight: 500;
                letter-spacing: 0.01em;
            }

            @media (min-width: 1024px) {
                .brand__tagline {
                    font-size: 1.15rem;
                }
            }

            .brand__logo {
                transition: transform 0.3s ease;
            }

            @media (min-width: 1024px) {
                .brand__logo {
                    transform: translateY(-2px);
                }
            }
        </style>

        <!-- DERECHA (ESCRITORIO): selector de idioma -->
        <div class="desktop-actions items-center gap-3 ml-3">
            <LanguageSwitcher currentLang={lang} />
        </div>

        <!-- ACCIONES MÓVILES: CTA arriba y fila con idioma + hamburguesa -->
        <!-- Ajusta el espaciado móvil editando las variables CSS --mobile-actions-vertical-gap y --mobile-actions-horizontal-gap -->
        <div class="mobile-actions ml-auto flex flex-col items-end md:hidden">
            {CTA_LINK && (
            <a
                href={CTA_LINK.href}
                class="mobile-cta inline-flex items-center rounded-md border border-white/20 px-4 py-2 text-sm font-medium text-white shadow-sm transition hover:bg-white/10">
                {t(lang, CTA_LINK.key)}
            </a>
            )}
            <div class="mobile-actions-row flex items-center">
                <LanguageSwitcher currentLang={lang} />
                <!-- HAMBURGUESA (SOLO MÓVIL) -->
                <button id="navToggle"
                        class="nav-burger inline-flex h-9 w-9 items-center justify-center rounded-md border border-white/15 text-white/90"
                        aria-controls="navDrawer" aria-expanded="false" aria-label="Abrir menú">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none">
                    <path d="M4 6h16M4 12h16M4 18h16" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- DRAWER MÓVIL -->
    <div id="navDrawer" class="hidden border-t border-white/10 bg-[#0B1734]/95 backdrop-blur">
        <div class="mx-auto max-w-container px-4 py-3 space-y-2">
            {MENU_LINKS.map(l => (
                <a
                    href={l.href}
                    class:list={{
                        'block rounded-md px-3 py-2 text-sm text-white/90 hover:bg-white/5': l.variant !== 'cta',
                    }}>
                    {t(lang, l.key)}
                </a>
            ))}
        </div>
    </div>

    <!-- Forzar que la hamburguesa desaparezca en ≥768px, por si hay CSS residual -->
    <style is:global>
        .desktop-nav,
        .desktop-actions {
            display: none;
        }

        @media (min-width: 768px) {
            .desktop-nav,
            .desktop-actions {
                display: flex;
            }

            .nav-burger {
                display: none !important;
            }

            #navDrawer {
                display: none !important;
            }

            .mobile-actions {
                display: none !important;
            }
        }
    </style>

    <script is:inline>
        const btn = document.getElementById('navToggle');
        const drawer = document.getElementById('navDrawer');
        btn?.addEventListener('click', () => {
            const open = drawer?.classList.toggle('hidden') === false;
            btn.setAttribute('aria-expanded', String(open));
        });
    </script>
</header>